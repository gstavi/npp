From c10c600d6e1562b45f75acc054a665a42eb41a5b Mon Sep 17 00:00:00 2001
From: gstavi <gur.stavi@gmail.com>
Date: Wed, 15 Jul 2015 16:20:26 +0300
Subject: [PATCH 04/12] Indent change maintains indent type
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="------------2.4.5"

This is a multi-part message in MIME format.
--------------2.4.5
Content-Type: text/plain; charset=UTF-8; format=fixed
Content-Transfer-Encoding: 8bit


* If an already indented line changes its indent level with tab or shift-tab
  the new indentation will retain the original indentation type instead of using
  the global type.

diff --git a/scintilla/src/Document.cxx b/scintilla/src/Document.cxx
index 64f6b46..a6808c1 100644
--- a/scintilla/src/Document.cxx
+++ b/scintilla/src/Document.cxx
@@ -1179,7 +1179,14 @@ void Document::SetLineIndentation(int line, int indent) {
 	if (indent < 0)
 		indent = 0;
 	if (indent != indentOfLine) {
-		std::string linebuf = CreateIndentation(indent, tabInChars, !useTabs);
+		/*
+		 * Gur: When changing indentation use tab or space based on the current
+		 * indentation of the line and not the global mode.
+		 */
+		int lineStart = LineStart(line);
+		char ch = lineStart < Length() ? cb.CharAt(lineStart) : useTabs ? '\t' : ' ';
+		bool effUseTabs = ch == '\t' ? true : ch == ' ' ? false : useTabs;
+		std::string linebuf = CreateIndentation(indent, tabInChars, !effUseTabs);
 		int thisLineStart = LineStart(line);
 		int indentPos = GetLineIndentPosition(line);
 		UndoGroup ug(this);

--------------2.4.5--


